#labels make,MakeExecuteProcess
= GNU make的执行过程 =

 * 1.读取变量"MAKEFILES"定义的makefile文件列表 (不知是干什么用的?但是应该和我们写的makefile没有关系,先不管它)
 * 2.读取工作目录下的默认makefile文件(makefile,Makefile) (开始读我们的写的makefile主文件了)
 * 3.依次读取工作目录makefile文件中使用指示符"include"包含的文件 (makefile主文件中包含的其他文件也读进来了)
 *　4.查找重建所有已读取的makefile文件的规则(如果存在一个目标是当前读取的某一个makefile文件,则执行此规则重建此makefile文件,完成以后从第一步开始重新执行) （makefile主文件极其包含的makefile文件有需要动态修改的，先修改在重新读进来）
 * 5.初始化变量值并展开那些需要立即展开的变量和函数并根据预设条件确定执行分支 （相当于预处理过程吧？）
 * 6.根据"终极目标"以及其他目标的依赖关系建立依赖关系链表 (开始整理我们的写的规则准备执行了，相当于编译链接过程)
 * 7.执行除"终极目标"以外的所有的目标的规则(规则中如果所依赖的文件中一个时间戳比目标文件新,则根据规则所定义的命令重新创建目标) （最后两步就是执行了）
 * 8.执行"终极目标"所在的规则
本篇文章来自http://www.soidc.net/discuss/23/090526/10/716517_1.html并做了修改．

= 结论 =
 * 变量的定义位置与目标的定义位置之间的前后关系*没有关系*
 * 目标的执行过程大概是*深度优先遍历*执行